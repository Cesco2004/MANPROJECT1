{"ast":null,"code":"import React,{useState,useEffect}from'react';import HeartRate from'./HeartRate';import Temperature from'./Temperature';import BreathingRate from'./BreathingRate';import SleepQuality from'./SleepQuality';import BabyPosition from'./BabyPosition';import CryingSounds from'./CryingSounds';import Recommendations from'./Recommendations';import'../App.css';// Correction du chemin d'importation\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Dashboard=()=>{const[data,setData]=useState({bpm:120,temp:98.4,rate:40,quality:\"Peaceful\",position:\"On the back\",crying:false});useEffect(()=>{const interval=setInterval(()=>{setData(prevData=>({...prevData,bpm:Math.floor(Math.random()*(125-120+1))+120,temp:(98.4+Math.random()*0.5).toFixed(1),rate:Math.floor(Math.random()*(45-40+1))+40}));},2000);// Update every 2 seconds\nreturn()=>clearInterval(interval);},[]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard\",children:[/*#__PURE__*/_jsx(HeartRate,{bpm:data.bpm}),/*#__PURE__*/_jsx(Temperature,{temp:data.temp}),/*#__PURE__*/_jsx(BreathingRate,{rate:data.rate}),/*#__PURE__*/_jsx(SleepQuality,{quality:data.quality}),/*#__PURE__*/_jsx(BabyPosition,{position:data.position}),/*#__PURE__*/_jsx(CryingSounds,{crying:data.crying})]}),/*#__PURE__*/_jsx(\"div\",{className:\"recommendations-section\",children:/*#__PURE__*/_jsx(Recommendations,{})})]});};export default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","HeartRate","Temperature","BreathingRate","SleepQuality","BabyPosition","CryingSounds","Recommendations","jsx","_jsx","jsxs","_jsxs","Dashboard","data","setData","bpm","temp","rate","quality","position","crying","interval","setInterval","prevData","Math","floor","random","toFixed","clearInterval","children","className"],"sources":["C:/Users/franc/OneDrive/Bureau/McCombs/Project-MAN-Baby/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport HeartRate from './HeartRate';\r\nimport Temperature from './Temperature';\r\nimport BreathingRate from './BreathingRate';\r\nimport SleepQuality from './SleepQuality';\r\nimport BabyPosition from './BabyPosition';\r\nimport CryingSounds from './CryingSounds';\r\nimport Recommendations from './Recommendations';\r\nimport '../App.css'; // Correction du chemin d'importation\r\n\r\nconst Dashboard = () => {\r\n  const [data, setData] = useState({\r\n    bpm: 120,\r\n    temp: 98.4,\r\n    rate: 40,\r\n    quality: \"Peaceful\",\r\n    position: \"On the back\",\r\n    crying: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setData(prevData => ({\r\n        ...prevData,\r\n        bpm: Math.floor(Math.random() * (125 - 120 + 1)) + 120,\r\n        temp: (98.4 + Math.random() * 0.5).toFixed(1),\r\n        rate: Math.floor(Math.random() * (45 - 40 + 1)) + 40,\r\n      }));\r\n    }, 2000); // Update every 2 seconds\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"dashboard\">\r\n        <HeartRate bpm={data.bpm} />\r\n        <Temperature temp={data.temp} />\r\n        <BreathingRate rate={data.rate} />\r\n        <SleepQuality quality={data.quality} />\r\n        <BabyPosition position={data.position} />\r\n        <CryingSounds crying={data.crying} />\r\n      </div>\r\n      <div className=\"recommendations-section\">\r\n        <Recommendations />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,SAAS,KAAM,aAAa,CACnC,MAAO,CAAAC,WAAW,KAAM,eAAe,CACvC,MAAO,CAAAC,aAAa,KAAM,iBAAiB,CAC3C,MAAO,CAAAC,YAAY,KAAM,gBAAgB,CACzC,MAAO,CAAAC,YAAY,KAAM,gBAAgB,CACzC,MAAO,CAAAC,YAAY,KAAM,gBAAgB,CACzC,MAAO,CAAAC,eAAe,KAAM,mBAAmB,CAC/C,MAAO,YAAY,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAErB,KAAM,CAAAC,SAAS,CAAGA,CAAA,GAAM,CACtB,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGf,QAAQ,CAAC,CAC/BgB,GAAG,CAAE,GAAG,CACRC,IAAI,CAAE,IAAI,CACVC,IAAI,CAAE,EAAE,CACRC,OAAO,CAAE,UAAU,CACnBC,QAAQ,CAAE,aAAa,CACvBC,MAAM,CAAE,KACV,CAAC,CAAC,CAEFpB,SAAS,CAAC,IAAM,CACd,KAAM,CAAAqB,QAAQ,CAAGC,WAAW,CAAC,IAAM,CACjCR,OAAO,CAACS,QAAQ,GAAK,CACnB,GAAGA,QAAQ,CACXR,GAAG,CAAES,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,EAAI,GAAG,CAAG,GAAG,CAAG,CAAC,CAAC,CAAC,CAAG,GAAG,CACtDV,IAAI,CAAE,CAAC,IAAI,CAAGQ,IAAI,CAACE,MAAM,CAAC,CAAC,CAAG,GAAG,EAAEC,OAAO,CAAC,CAAC,CAAC,CAC7CV,IAAI,CAAEO,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,EAAI,EAAE,CAAG,EAAE,CAAG,CAAC,CAAC,CAAC,CAAG,EACpD,CAAC,CAAC,CAAC,CACL,CAAC,CAAE,IAAI,CAAC,CAAE;AAEV,MAAO,IAAME,aAAa,CAACP,QAAQ,CAAC,CACtC,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEV,KAAA,QAAAkB,QAAA,eACElB,KAAA,QAAKmB,SAAS,CAAC,WAAW,CAAAD,QAAA,eACxBpB,IAAA,CAACR,SAAS,EAACc,GAAG,CAAEF,IAAI,CAACE,GAAI,CAAE,CAAC,cAC5BN,IAAA,CAACP,WAAW,EAACc,IAAI,CAAEH,IAAI,CAACG,IAAK,CAAE,CAAC,cAChCP,IAAA,CAACN,aAAa,EAACc,IAAI,CAAEJ,IAAI,CAACI,IAAK,CAAE,CAAC,cAClCR,IAAA,CAACL,YAAY,EAACc,OAAO,CAAEL,IAAI,CAACK,OAAQ,CAAE,CAAC,cACvCT,IAAA,CAACJ,YAAY,EAACc,QAAQ,CAAEN,IAAI,CAACM,QAAS,CAAE,CAAC,cACzCV,IAAA,CAACH,YAAY,EAACc,MAAM,CAAEP,IAAI,CAACO,MAAO,CAAE,CAAC,EAClC,CAAC,cACNX,IAAA,QAAKqB,SAAS,CAAC,yBAAyB,CAAAD,QAAA,cACtCpB,IAAA,CAACF,eAAe,GAAE,CAAC,CAChB,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAK,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}